{"ast":null,"code":"import _regeneratorRuntime from\"E:/MERN/backend/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"E:/MERN/backend/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{json}from\"react-router-dom\";//Fetch all pets.\nexport var fetchPets=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var query,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:query=window.location.search;_context.next=3;return fetch(\"/api/v1/pets\".concat(query));case 3:res=_context.sent;if(res.ok){_context.next=6;break;}throw json({message:\"No pets available.\"},{status:500});case 6:return _context.abrupt(\"return\",res);case 7:case\"end\":return _context.stop();}},_callee);}));return function fetchPets(){return _ref.apply(this,arguments);};}();//Fetch one pet.\nexport var fetchPet=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref2){var request,params,id,res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:request=_ref2.request,params=_ref2.params;id=params.id;_context2.next=4;return fetch(\"/api/v1/pets/\".concat(id));case 4:res=_context2.sent;return _context2.abrupt(\"return\",res);case 6:case\"end\":return _context2.stop();}},_callee2);}));return function fetchPet(_x){return _ref3.apply(this,arguments);};}();//Authorize users.\nexport var registerUser=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(user){var res,data,_data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"/users/register\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(user)});case 2:res=_context3.sent;if(!(res.status!==200)){_context3.next=10;break;}_context3.next=6;return res.json();case 6:data=_context3.sent;return _context3.abrupt(\"return\",Promise.reject(data.message));case 10:_context3.next=12;return res.json();case 12:_data=_context3.sent;return _context3.abrupt(\"return\",_data);case 14:case\"end\":return _context3.stop();}},_callee3);}));return function registerUser(_x2){return _ref4.apply(this,arguments);};}();export var loginUser=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(user){var res,data,_data2;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(\"/users/login\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(user)});case 2:res=_context4.sent;if(!(res.status!==200)){_context4.next=10;break;}_context4.next=6;return res.json();case 6:data=_context4.sent;return _context4.abrupt(\"return\",Promise.reject(data.message));case 10:_context4.next=12;return res.json();case 12:_data2=_context4.sent;return _context4.abrupt(\"return\",_data2);case 14:case\"end\":return _context4.stop();}},_callee4);}));return function loginUser(_x3){return _ref5.apply(this,arguments);};}();export var getUser=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var res,_data3,data;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(\"/users/isUserAuth\",{credentials:\"include\",headers:{\"Content-type\":\"application/json\"}});case 2:res=_context5.sent;if(!(res.status!==200)){_context5.next=8;break;}_context5.next=6;return res.json();case 6:_data3=_context5.sent;return _context5.abrupt(\"return\",Promise.reject(_data3.message));case 8:_context5.next=10;return res.json();case 10:data=_context5.sent;return _context5.abrupt(\"return\",data);case 12:case\"end\":return _context5.stop();}},_callee5);}));return function getUser(){return _ref6.apply(this,arguments);};}();export var logoutUser=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(){var res,data;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.next=2;return fetch(\"/users/logout\",{credentials:\"include\",headers:{\"Content-type\":\"application/json\"}});case 2:res=_context6.sent;_context6.next=5;return res.json();case 5:data=_context6.sent;return _context6.abrupt(\"return\",data);case 7:case\"end\":return _context6.stop();}},_callee6);}));return function logoutUser(){return _ref7.apply(this,arguments);};}();","map":{"version":3,"names":["json","fetchPets","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","res","wrap","_callee$","_context","prev","next","window","location","search","fetch","concat","sent","ok","message","status","abrupt","stop","apply","arguments","fetchPet","_ref3","_callee2","_ref2","request","params","id","_callee2$","_context2","_x","registerUser","_ref4","_callee3","user","data","_data","_callee3$","_context3","method","headers","body","JSON","stringify","Promise","reject","_x2","loginUser","_ref5","_callee4","_data2","_callee4$","_context4","_x3","getUser","_ref6","_callee5","_data3","_callee5$","_context5","credentials","logoutUser","_ref7","_callee6","_callee6$","_context6"],"sources":["E:/MERN/backend/client/src/services/api.tsx"],"sourcesContent":["import { json } from \"react-router-dom\";\n\n//Fetch all pets.\nexport const fetchPets = async () => {\n  const query = window.location.search;\n  const res = await fetch(`/api/v1/pets${query}`);\n  if (!res.ok) {\n    throw json({ message: \"No pets available.\" }, { status: 500 });\n  }\n  return res;\n};\n\n//Fetch one pet.\nexport const fetchPet = async ({\n  request,\n  params,\n}: {\n  request: any;\n  params: any;\n}) => {\n  const id = params.id;\n  const res = await fetch(`/api/v1/pets/${id}`);\n  return res;\n};\n\n//Authorize users.\nexport const registerUser = async (user: RegisterUser) => {\n  const res = await fetch(\"/users/register\", {\n    method: \"POST\",\n    headers: { \"Content-type\": \"application/json\" },\n    body: JSON.stringify(user),\n  });\n  if (res.status !== 200) {\n    const data = await res.json();\n    return Promise.reject(data.message);\n  } else {\n    const data = await res.json();\n    return data;\n  }\n};\n\nexport const loginUser = async (user: LoginUser) => {\n  const res = await fetch(\"/users/login\", {\n    method: \"POST\",\n    headers: { \"Content-type\": \"application/json\" },\n    body: JSON.stringify(user),\n  });\n  if (res.status !== 200) {\n    const data = await res.json();\n    return Promise.reject(data.message);\n  } else {\n    const data = await res.json();\n    return data;\n  }\n};\n\nexport const getUser = async () => {\n  const res = await fetch(\"/users/isUserAuth\", {\n    credentials: \"include\",\n    headers: { \"Content-type\": \"application/json\" },\n  });\n  if (res.status !== 200) {\n    const data = await res.json();\n    return Promise.reject(data.message);\n  }\n  const data = await res.json();\n  return data;\n};\n\nexport const logoutUser = async () => {\n  const res = await fetch(\"/users/logout\", {\n    credentials: \"include\",\n    headers: { \"Content-type\": \"application/json\" },\n  });\n  const data = await res.json();\n  return data;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}