{"ast":null,"code":"import{json}from\"react-router-dom\";//Fetch all pets.\nexport const fetchPets=async()=>{const query=window.location.search;const res=await fetch(\"/api/v1/pets\".concat(query));if(!res.ok){throw json({message:\"No pets available.\"},{status:500});}return res;};//Fetch one pet.\nexport const fetchPet=async _ref=>{let{request,params}=_ref;const id=params.id;const res=await fetch(\"/api/v1/pets/\".concat(id));return res;};//Authorize users.\nexport const registerUser=async user=>{const res=await fetch(\"/users/register\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(user)});if(res.status!==200){const data=await res.json();return Promise.reject(data.message);}else{const data=await res.json();return data;}};export const loginUser=async user=>{const res=await fetch(\"/users/login\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(user)});if(res.status!==200){const data=await res.json();return Promise.reject(data.message);}else{const data=await res.json();return data;}};export const getUser=async()=>{const res=await fetch(\"/users/isUserAuth\",{credentials:\"include\",headers:{\"Content-type\":\"application/json\"}});if(res.status!==200){const data=await res.json();return Promise.reject(data.message);}const data=await res.json();return data;};export const logoutUser=async()=>{const res=await fetch(\"/users/logout\",{credentials:\"include\",headers:{\"Content-type\":\"application/json\"}});const data=await res.json();return data;};","map":{"version":3,"names":["json","fetchPets","query","window","location","search","res","fetch","concat","ok","message","status","fetchPet","_ref","request","params","id","registerUser","user","method","headers","body","JSON","stringify","data","Promise","reject","loginUser","getUser","credentials","logoutUser"],"sources":["E:/MERN/backend/client/src/services/api.tsx"],"sourcesContent":["import { json } from \"react-router-dom\";\n\n//Fetch all pets.\nexport const fetchPets = async () => {\n  const query = window.location.search;\n  const res = await fetch(`/api/v1/pets${query}`);\n  if (!res.ok) {\n    throw json({ message: \"No pets available.\" }, { status: 500 });\n  }\n  return res;\n};\n\n//Fetch one pet.\nexport const fetchPet = async ({\n  request,\n  params,\n}: {\n  request: any;\n  params: any;\n}) => {\n  const id = params.id;\n  const res = await fetch(`/api/v1/pets/${id}`);\n  return res;\n};\n\n//Authorize users.\nexport const registerUser = async (user: RegisterUser) => {\n  const res = await fetch(\"/users/register\", {\n    method: \"POST\",\n    headers: { \"Content-type\": \"application/json\" },\n    body: JSON.stringify(user),\n  });\n  if (res.status !== 200) {\n    const data = await res.json();\n    return Promise.reject(data.message);\n  } else {\n    const data = await res.json();\n    return data;\n  }\n};\n\nexport const loginUser = async (user: LoginUser) => {\n  const res = await fetch(\"/users/login\", {\n    method: \"POST\",\n    headers: { \"Content-type\": \"application/json\" },\n    body: JSON.stringify(user),\n  });\n  if (res.status !== 200) {\n    const data = await res.json();\n    return Promise.reject(data.message);\n  } else {\n    const data = await res.json();\n    return data;\n  }\n};\n\nexport const getUser = async () => {\n  const res = await fetch(\"/users/isUserAuth\", {\n    credentials: \"include\",\n    headers: { \"Content-type\": \"application/json\" },\n  });\n  if (res.status !== 200) {\n    const data = await res.json();\n    return Promise.reject(data.message);\n  }\n  const data = await res.json();\n  return data;\n};\n\nexport const logoutUser = async () => {\n  const res = await fetch(\"/users/logout\", {\n    credentials: \"include\",\n    headers: { \"Content-type\": \"application/json\" },\n  });\n  const data = await res.json();\n  return data;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}